name: "Publish documentation for testing"

on:
  push:
    branches:
    - testing-web-update
    paths:
    - 'arrow-libs/**'
    - 'arrow-site/**'
    - '.github/**'

jobs:
  publish_doc:

    env:
      BASEDIR: ${{github.workspace}}/arrow-libs
      JAVA_OPTS: -Xms512m -Xmx1024m
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: ${{ secrets.S3_BUCKET_FOR_TESTING }}
      AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID_FOR_TESTING }}
      AWS_DEFAULT_REGION: eu-west-1
      JEKYLL_ENV: production

    runs-on: macos-latest
    timeout-minutes: 60

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: "Setup"
      run: brew install grep
    - name: "Set env"
      run: ${GITHUB_WORKSPACE}/.github/scripts/set-env.sh

    - name: "Show env"
      run: ${GITHUB_WORKSPACE}/.github/scripts/show-env.sh

    - name: "Prepare environment"
      working-directory: arrow-site
      run: |
        mkdir $BASEDIR/logs
        brew install tree
        bundle install --gemfile Gemfile --path vendor/bundle

    - name: "Assemble"
      working-directory: arrow-libs
      run: |
        echo "Additional step to avoid a random failure with Dokka 0.10.0 and MPP"
        ./gradlew assemble

    - name: "Create API doc"
      working-directory: arrow-libs
      run: ./gradlew dokkaJekyll

    - name: "Validate documentation"
      working-directory: arrow-site
      run: ./gradlew runAnk

    - name: "Landing page: build"
      working-directory: arrow-site
      run: |
        bundle exec jekyll build -b docs -s build/site
        tree _site > $BASEDIR/logs/content.log

    - name: "Landing page: publish"
      working-directory: arrow-site
      run: |
        echo ">>> Landing page" >> $BASEDIR/logs/aws_sync.log
        ${GITHUB_WORKSPACE}/.github/scripts/publish-landing-page.sh

    - name: "Remove index for versions"
      working-directory: arrow-site
      run: rm -f build/site/index.md

    - name: "Latest release: build (docs/)"
      working-directory: arrow-site
      run: |
        bundle exec jekyll build -b docs -s build/site
        tree _site > $BASEDIR/logs/content_docs.log

    - name: "Latest release: publish (docs/)"
      working-directory: arrow-site
      run: |
        echo ">>> Latest release" >> $BASEDIR/logs/aws_sync.log
        ${GITHUB_WORKSPACE}/.github/scripts/publish-latest-release.sh

    - name: "Site: publish sitemap.xml"
      if: ${{ env.NEW_RELEASE_VERSION_EXISTS == '1' && github.ref == 'refs/heads/main' }}
      run: |
        ${GITHUB_WORKSPACE}/.github/scripts/create-sitemap.sh > sitemap.xml
        aws s3 cp sitemap.xml s3://$S3_BUCKET/sitemap.xml >> $BASEDIR/logs/aws_sync.log

    - name: CloudFront cache invalidation
      run: aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_ID --paths "/*"

    - name: List S3
      run: aws s3 ls s3://$S3_BUCKET --recursive --summarize > $BASEDIR/logs/site-content.log

    - uses: actions/upload-artifact@v1
      with:
        name: logs
        path: arrow-libs/logs
